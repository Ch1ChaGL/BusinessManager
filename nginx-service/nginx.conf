worker_processes 1;
load_module modules/ngx_http_js_module.so;

events {
    worker_connections 1024;
}

http {
    js_import /etc/nginx/oauth2.js;

    upstream user_service {
        server user-service:4200;
    }

    upstream notification_service {
        server notification-service:4200;
    }

    server {
        listen 80;

        # Локация для обработки запросов к user_service
        location /api/v1/users {
            auth_request /auth;  # Перед каждым запросом к user_service делаем промежуточный запрос для проверки авторизации.
            proxy_pass http://user_service;  # Перенаправляем запросы к user_service upstream.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Локация для обработки запросов к notification_service
        location /api/v1/notification {
            auth_request /auth;  # Перед каждым запросом к notification_service делаем промежуточный запрос для проверки авторизации.
            proxy_pass http://notification_service;  # Перенаправляем запросы к notification_service upstream.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Локация для промежуточного запроса, используемая для проверки авторизации
        location /auth {
            internal;
            js_content oauth2.introspectAccessToken;
        }

        # Локация для обработки запросов на авторизацию (регистрация, логин и прочее)
        location /api/v1/users/auth {
            auth_request off;
            proxy_pass http://user_service/api/v1/users/auth;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /_oauth2_send_request {
            internal;
            proxy_method GET;
            proxy_set_header Host $host;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
            proxy_pass http://user_service/api/v1/users/auth/validate;
            proxy_set_header Content-Length "";

            proxy_ignore_headers Cache-Control Expires Set-Cookie;
        }
    }
}
